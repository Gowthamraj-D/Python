
class Solution(object):
    def buildTree(self, inorder, postorder):
        """
        :type inorder: List[int]
        :type postorder: List[int]
        :rtype: TreeNode
        """
       
        if not inorder or not postorder:
            return None
        
        ino = {val : i for i, val in enumerate(inorder)}
        def helper(start, end):
            
            if start > end:
                return None
           
            node = postorder.pop()
            
            root = TreeNode(node)
            
            i = ino[node]
            
            root.right = helper(i + 1, end)
           
            root.left = helper(start, i - 1)

            return root

       
        return helper(0, len(inorder) - 1)
        
